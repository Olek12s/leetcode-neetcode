class Solution {
public:

    static int findRotationIdx(vector<int>& nums) {
        int left = 0;
        int right = nums.size() - 1;

        while (left < right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] > nums[right]) {  // rotation is on the right side
                left = mid + 1;
            }
            else right = mid;       // rotation is on the left side
        }
        return left;
    }

    static int findMin(vector<int>& nums) {
        int rotationIdx = findRotationIdx(nums);
        return nums[rotationIdx];
    }

    static int findMax(vector<int> &piles) {
        int max = INT_MIN;
        for (int el : piles) {
            if (max < el) {
                max = el;
            }
        }
        return max;
    }
};
